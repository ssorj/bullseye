#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

import importlib as _importlib

_verbose_arg = CommandArgument("verbose", help="Print detailed logging to the console")

@command(args=(CommandArgument("include", help="Run tests with names matching PATTERN", metavar="PATTERN"),
               CommandArgument("exclude", help="Do not run tests with names matching PATTERN", metavar="PATTERN"),
               CommandArgument("unskip", help="Run skipped tests matching PATTERN", metavar="PATTERN"),
               CommandArgument("list_", help="Print the test names and exit", display_name="list"),
               _verbose_arg))
def test_(include="*", exclude=None, unskip=None, list_=False, verbose=False, clean_=False):
    clean()

    with working_env(PYTHONPATH=get_absolute_path("python")):
        module = _importlib.import_module("bullseye.tests")

        assert module

        args = list()

        if list_:
            print_tests(module)
            return

        exclude = nvl(exclude, ())
        unskip = nvl(unskip, ())

        run_tests(module, include=include, exclude=exclude, unskip=unskip, verbose=verbose)

@command
def clean():
    remove(find(".", "__pycache__"))
